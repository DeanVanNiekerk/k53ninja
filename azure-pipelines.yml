# Node.js
# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

pool:
    vmImage: "macOS-latest"

parameters:
    buildAndroid: true
    buildIOS: true

jobs:
    - job: Build React App
      steps:
          - task: NodeTool@0
            inputs:
                versionSpec: "10.x"
            displayName: "Install Node.js"
          - script: |
                npm install
            displayName: "React App > Install"
          - script: |
                npm run lint
            displayName: "React App > Lint"
          - script: |
                npm run test
            displayName: "React App > Test"
          - script: |
                npm run build
            displayName: "React App > Build"

    - job: Build for Android
      condition: eq('${{ parameters.buildAndroid }}', true)
      steps:
          - script: |
                npm run cap-sync-android
            displayName: "React App > Sync to Android Project"
          - script: |
                npm run cap-copy-android
            displayName: "React App > Copy to Android Project"

          - task: Gradle@2
            inputs:
                workingDirectory: "android"
                gradleWrapperFile: "android/gradlew"
                gradleOptions: "-Xmx3072m"
                tasks: "build"
            displayName: "Android APK > Build"
          - task: AndroidSigning@3
            inputs:
                apkFiles: "**/app-release-unsigned.apk"
                apksignerKeystoreFile: "upload-keystore.jks"
                apksignerKeystorePassword: "lead2gold"
                apksignerKeystoreAlias: "upload"
                apksignerKeyPassword: "gold2lead"
                zipalign: false
            displayName: "Android APK > Sign"
          - task: CopyFiles@2
            inputs:
                contents: "**/app-release-unsigned.apk"
                flattenFolders: true
                targetFolder: "$(Build.ArtifactStagingDirectory)"
            displayName: "Android APK > Copy to Artifacts"

    - job: Build for IOS
      condition: eq('${{ parameters.buildIOS }}', true)
      steps:
          - script: |
                npm run cap-sync-ios
            displayName: "React App > Sync to IOS Project"
          - script: |
                npm run cap-copy-ios
            displayName: "React App > Copy to IOS Project"

          - task: Xcode@5
            inputs:
                sdk: "iphoneos"
                scheme: "App"
                configuration: "Release"
                xcodeVersion: "default"
                exportPath: "$(agent.buildDirectory)/output/iphoneos/Release"
                packageApp: false
                xcWorkspacePath: "ios/App/App.xcworkspace"
          # - task: CopyFiles@2
          #   inputs:
          #       contents: "**/*.ipa"
          #       flattenFolders: true
          #       targetFolder: "$(Build.ArtifactStagingDirectory)"
          #   displayName: "IOS IPA > Copy to Artifacts"

    - job: Copy to Artifacts
      steps:
          - task: PublishBuildArtifacts@1
            inputs:
                PathtoPublish: "$(Build.ArtifactStagingDirectory)"
                ArtifactName: "drop"
                publishLocation: "Container"
            displayName: "Publish Artifacts"
